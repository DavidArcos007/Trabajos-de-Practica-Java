package ia8puzzlearcosaguas;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author David
 */
public class Nodo {
    
Nodo padre;
    List<Nodo> hijos = new ArrayList();
    Estado estado;
    boolean raiz;
    
    public int valor_hn;
    public int valor_gn;
    public int valor_fn;
    public int rama;

    public Nodo(Estado estado, Nodo padre,boolean raiz) {
        this.padre = padre;
        this.estado = estado;
        this.valor_gn = padre == null ? 0 : this.padre.valor_gn + 1;
        this.valor_hn = this.estado.carlcular_hn();
        this.valor_fn = this.valor_gn + this.valor_hn;
        this.raiz=raiz;
    }

    public boolean es_funcion_objetivo() {
        return Arrays.deepEquals(this.estado.estado_actual, Variables.ESTADO_OBJETIVO);
    }

    public void agregar_hijo(Nodo hijo) {
        this.hijos.add(hijo);
    }

    public void agregar_hoja(Nodo hoja) {
        Variables.HOJAS.add(hoja);
    }

    public void expandir_nodos() {
        List<Estado> estados = this.estado.generar_estados();
        for (int i = 0; i < estados.size(); i++) {
            Nodo aux = new Nodo(estados.get(i), this,false);
            aux.rama = i + 1;
            this.agregar_hijo(aux);
            this.agregar_hoja(aux);
        }
        if (!this.raiz) {
            Variables.HOJAS.remove(this);
        }
    }

    @Override
    public String toString() {
        return "Nodo{" + ", valor_hn=" + valor_hn + ", valor_gn=" + valor_gn + ", valor_fn=" + valor_fn + ", rama=" + rama + '}';
    }

    public static Nodo nodo_hoja_menor() {
        Nodo hoja_menor = null;
        for (int i = 0; i < Variables.HOJAS.size(); i++) {
            if(hoja_menor==null){
                hoja_menor=Variables.HOJAS.get(0);
            }
            if (hoja_menor.valor_fn > Variables.HOJAS.get(i).valor_fn ) {
                hoja_menor = Variables.HOJAS.get(i);
            } 
        }
        return hoja_menor;
    }

}
